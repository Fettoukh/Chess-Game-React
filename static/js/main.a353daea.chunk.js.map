{"version":3,"sources":["components/icons/index.js","components/icons/PawnIcon.js","components/icons/BishopIcon.js","components/icons/KnightIcon.js","components/icons/RookIcon.js","components/icons/KingIcon.js","components/icons/QueenIcon.js","models/Piece.js","lib/constants.js","models/GameState.js","components/GameView.js","index.js","themes/dark.js"],"names":["pawn","color1","color2","xmlns","version","viewBox","d","style","opacity","fill","fillOpacity","fillRule","stroke","strokeWidth","strokeLinecap","strokeLinejoin","strokeMiterlimit","strokeDasharray","strokeOpacity","bishop","knight","transform","rook","king","queen","cx","cy","r","file","Piece","id","type","x","y","player","firstMove","this","PLAYER1","PLAYER2","KING","LATERAL_BACK_ROW_PIECES","LEFT_BACK_ROW_PIECES","RIGHT_BACK_ROW_PIECES","reverse","momentDurationFormatSetup","moment","GameState","updateTimePlayed","sessionTimePlayed","duration","diff","sessionStartedAt","totalTimePlayed","nextTurn","currentPlayer","currentTurn","initPieces","pieces","forEach","index","piece","uuid","undefined","BOARD_SIDE_SIZE","push","getPieceAt","find","matchSelectedId","selected","removePiece","pieceToRemove","playerPieceRemoved","removedPieces","updatedPlayerPieceRemoved","oppositePlayerPieceRemoved","Number","console","log","select","pieceProperties","unselect","isSelectedSquare","isBishopPattern","vectorX","vectorY","Math","abs","isRookPattern","isRookMoveFree","origin","vector","axis","otherAxis","lineToCheck","target","some","isPiecePattern","destination","isLegalMove","moveSelectedPiece","moved","selectedX","selectedY","selectedPiece","map","targetPiece","gameStartedAt","Home","updateGameState","gameState","setState","handleSelect","state","renderPieceIcon","Icon","icons","IconContainer","title","renderGameStats","GameStats","CurrentTurn","String","CurrentPlayer","TimePlayed","format","trim","renderGraveyard","Tomb","key","renderSquares","squares","Side","border","fromCharCode","adjustedX","adjustedY","Square","even","onClick","window","setInterval","View","Wrapper","Graveyard","Board","Component","styled","div","props","theme","background2","evenSquareBackground","oddSquareBackground","GlobalStyle","createGlobalStyle","background1","ReactDOM","render","name","path","component","GameView","document","getElementById"],"mappings":"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","file":"static/js/main.a353daea.chunk.js","sourcesContent":["import PawnIcon from './PawnIcon';\r\nimport BishopIcon from './BishopIcon';\r\nimport KnightIcon from './KnightIcon';\r\nimport RookIcon from './RookIcon';\r\nimport KingIcon from './KingIcon';\r\nimport QueenIcon from './QueenIcon';\r\n\r\nexport default {\r\n    pawn: PawnIcon,\r\n    bishop: BishopIcon,\r\n    knight: KnightIcon,\r\n    rook: RookIcon,\r\n    king: KingIcon,\r\n    queen: QueenIcon\r\n};","import React from 'react';\r\n\r\nexport default ({ color1, color2 }) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 45 45\">\r\n        <path\r\n            d=\"M 22,9 C 19.79,9 18,10.79 18,13 C 18,13.89 18.29,14.71 18.78,15.38 C 16.83,16.5 15.5,18.59 15.5,21 C 15.5,23.03 16.44,24.84 17.91,26.03 C 14.91,27.09 10.5,31.58 10.5,39.5 L 33.5,39.5 C 33.5,31.58 29.09,27.09 26.09,26.03 C 27.56,24.84 28.5,23.03 28.5,21 C 28.5,18.59 27.17,16.5 25.22,15.38 C 25.71,14.71 26,13.89 26,13 C 26,10.79 24.21,9 22,9 z \"\r\n            style={{\r\n                opacity: 1,\r\n                fill: color1,\r\n                fillOpacity: 1,\r\n                fillRule: 'nonzero',\r\n                stroke: '#000000',\r\n                strokeWidth: 1.5,\r\n                strokeLinecap: 'round',\r\n                strokeLinejoin: 'miter',\r\n                strokeMiterlimit: 4,\r\n                strokeDasharray: 'none',\r\n                strokeOpacity: 1\r\n            }}\r\n        />\r\n    </svg>\r\n);","import React from 'react';\r\n\r\nexport default ({ color1, color2 }) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 45 45\">\r\n        <g\r\n            style={{\r\n                opacity: 1,\r\n                fill: 'none',\r\n                fillRule: 'evenodd',\r\n                fillOpacity: 1,\r\n                stroke: '#000000',\r\n                strokeWidth: 1.5,\r\n                strokeLinecap: 'round',\r\n                strokeLinejoin: 'round',\r\n                strokeMiterlimit: 4,\r\n                strokeDasharray: 'none',\r\n                strokeOpacity: 1\r\n            }}\r\n        >\r\n            <g\r\n                style={{\r\n                    fill: color1,\r\n                    stroke: '#000000',\r\n                    strokeLinecap: 'butt'\r\n                }}\r\n            >\r\n                <path d=\"M 9,36 C 12.39,35.03 19.11,36.43 22.5,34 C 25.89,36.43 32.61,35.03 36,36 C 36,36 37.65,36.54 39,38 C 38.32,38.97 37.35,38.99 36,38.5 C 32.61,37.53 25.89,38.96 22.5,37.5 C 19.11,38.96 12.39,37.53 9,38.5 C 7.646,38.99 6.677,38.97 6,38 C 7.354,36.06 9,36 9,36 z\" />\r\n                <path d=\"M 15,32 C 17.5,34.5 27.5,34.5 30,32 C 30.5,30.5 30,30 30,30 C 30,27.5 27.5,26 27.5,26 C 33,24.5 33.5,14.5 22.5,10.5 C 11.5,14.5 12,24.5 17.5,26 C 17.5,26 15,27.5 15,30 C 15,30 14.5,30.5 15,32 z\" />\r\n                <path d=\"M 25 8 A 2.5 2.5 0 1 1  20,8 A 2.5 2.5 0 1 1  25 8 z\" />\r\n            </g>\r\n            <path\r\n                d=\"M 17.5,26 L 27.5,26 M 15,30 L 30,30 M 22.5,15.5 L 22.5,20.5 M 20,18 L 25,18\"\r\n                style={{\r\n                    fill: 'none',\r\n                    stroke: color2,\r\n                    strokeLinejoin: 'miter'\r\n                }}\r\n            />\r\n        </g>\r\n    </svg>\r\n);","  \r\nimport React from 'react';\r\n\r\nexport default ({ color1, color2 }) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 45 45\">\r\n        <g\r\n            style={{\r\n                fill: color1,\r\n                fillRule: 'evenodd',\r\n                strokeWidth: 1.5,\r\n                strokeLinecap: 'round',\r\n                strokeLinejoin: 'round',\r\n                strokeMiterlimit: 4,\r\n                strokeDasharray: 'none'\r\n            }}\r\n        >\r\n            <path\r\n                d=\"M 22,10 C 32.5,11 38.5,18 38,39 L 15,39 C 15,30 25,32.5 23,18\"\r\n                style={{\r\n                    fill: color1,\r\n                    stroke: color1 === 'black' ? color1 : color2\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 24,18 C 24.38,20.91 18.45,25.37 16,27 C 13,29 13.18,31.34 11,31 C 9.958,30.06 12.41,27.96 11,28 C 10,28 11.19,29.23 10,30 C 9,30 5.997,31 6,26 C 6,24 12,14 12,14 C 12,14 13.89,12.1 14,10.5 C 13.27,9.506 13.5,8.5 13.5,7.5 C 14.5,6.5 16.5,10 16.5,10 L 18.5,10 C 18.5,10 19.28,8.008 21,7 C 22,7 22,10 22,10\"\r\n                style={{\r\n                    fill: color1,\r\n                    stroke: color1 === 'black' ? color1 : color2\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 9.5 25.5 A 0.5 0.5 0 1 1 8.5,25.5 A 0.5 0.5 0 1 1 9.5 25.5 z\"\r\n                style={{ fill: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 15 15.5 A 0.5 1.5 0 1 1  14,15.5 A 0.5 1.5 0 1 1  15 15.5 z\"\r\n                transform=\"matrix(0.866,0.5,-0.5,0.866,9.693,-5.173)\"\r\n                style={{ fill: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 24.55,10.4 L 24.1,11.85 L 24.6,12 C 27.75,13 30.25,14.49 32.5,18.75 C 34.75,23.01 35.75,29.06 35.25,39 L 35.2,39.5 L 37.45,39.5 L 37.5,39 C 38,28.94 36.62,22.15 34.25,17.66 C 31.88,13.17 28.46,11.02 25.06,10.5 L 24.55,10.4 z \"\r\n                style={{\r\n                    fill: color2,\r\n                    stroke: color1 === 'black' ? color1 : color2,\r\n                    strokeWidth: 0.5\r\n                }}\r\n            />\r\n        </g>\r\n    </svg>\r\n);","  \r\nimport React from 'react';\r\n\r\nexport default ({ color1, color2 }) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 45 45\">\r\n        <g\r\n            style={{\r\n                fill: color1,\r\n                stroke: color1 === 'black' ? color1 : color2,\r\n                fillRule: 'evenodd',\r\n                strokeWidth: 1.5,\r\n                strokeLinecap: 'round',\r\n                strokeLinejoin: 'round',\r\n                strokeMiterlimit: 4,\r\n                strokeDasharray: 'none'\r\n            }}\r\n        >\r\n            <path\r\n                d=\"M 9,39 L 36,39 L 36,36 L 9,36 L 9,39 z \"\r\n                style={{ strokeLinecap: 'butt' }}\r\n            />\r\n            <path\r\n                d=\"M 12.5,32 L 14,29.5 L 31,29.5 L 32.5,32 L 12.5,32 z \"\r\n                style={{ strokeLinecap: 'butt' }}\r\n            />\r\n            <path\r\n                d=\"M 12,36 L 12,32 L 33,32 L 33,36 L 12,36 z \"\r\n                style={{ strokeLinecap: 'butt' }}\r\n            />\r\n            <path\r\n                d=\"M 14,29.5 L 14,16.5 L 31,16.5 L 31,29.5 L 14,29.5 z \"\r\n                style={{ strokeLinecap: 'butt', strokeLinejoin: 'miter' }}\r\n            />\r\n            <path\r\n                d=\"M 14,16.5 L 11,14 L 34,14 L 31,16.5 L 14,16.5 z \"\r\n                style={{ strokeLinecap: 'butt' }}\r\n            />\r\n            <path\r\n                d=\"M 11,14 L 11,9 L 15,9 L 15,11 L 20,11 L 20,9 L 25,9 L 25,11 L 30,11 L 30,9 L 34,9 L 34,14 L 11,14 z \"\r\n                style={{ strokeLinecap: 'butt' }}\r\n            />\r\n            <path\r\n                d=\"M 12,35.5 L 33,35.5 L 33,35.5\"\r\n                style={{\r\n                    fill: 'none',\r\n                    stroke: color2,\r\n                    strokeWidth: 1,\r\n                    strokeLinejoin: 'miter'\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 13,31.5 L 32,31.5\"\r\n                style={{\r\n                    fill: 'none',\r\n                    stroke: color2,\r\n                    strokeWidth: 1,\r\n                    strokeLinejoin: 'miter'\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 14,29.5 L 31,29.5\"\r\n                style={{\r\n                    fill: 'none',\r\n                    stroke: color2,\r\n                    strokeWidth: 1,\r\n                    strokeLinejoin: 'miter'\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 14,16.5 L 31,16.5\"\r\n                style={{\r\n                    fill: 'none',\r\n                    stroke: color2,\r\n                    strokeWidth: 1,\r\n                    strokeLinejoin: 'miter'\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 11,14 L 34,14\"\r\n                style={{\r\n                    fill: 'none',\r\n                    stroke: color2,\r\n                    strokeWidth: 1,\r\n                    strokeLinejoin: 'miter'\r\n                }}\r\n            />\r\n        </g>\r\n    </svg>\r\n);","import React from 'react';\r\n\r\nexport default ({ color1, color2 }) => (\r\n    <svg xmlns=\"http: //www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 45 45\">\r\n        <g\r\n            xmlns=\"http: //www.w3.org/2000/svg\"\r\n            style={{\r\n                fill: color1,\r\n                fillRule: 'evenodd',\r\n                strokeWidth: 1.5,\r\n                strokeLinecap: 'round',\r\n                strokeLinejoin: 'round',\r\n                strokeMiterlimit: 4,\r\n                strokeDasharray: 'none'\r\n            }}\r\n        >\r\n            <path\r\n                d=\"M 22.5,11.63 L 22.5,6\"\r\n                style={{\r\n                    fill: color2,\r\n                    stroke: color1,\r\n                    strokeLinecap: 'miter',\r\n                    strokeWidth: 1\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 20,8 L 25,8\"\r\n                style={{\r\n                    fill: color1,\r\n                    stroke: color1,\r\n                    strokeLinecap: 'miter'\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 22.5,25 C 22.5,25 27,17.5 25.5,14.5 C 25.5,14.5 24.5,12 22.5,12 C 20.5,12 19.5,14.5 19.5,14.5 C 18,17.5 22.5,25 22.5,25\"\r\n                style={{\r\n                    fill: color1,\r\n                    stroke: color1 === 'black' ? color1 : color2,\r\n                    strokeLinecap: 'butt',\r\n                    strokeLinecap: 'miter'\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 11.5,37 C 17,40.5 27,40.5 32.5,37 L 32.5,30 C 32.5,30 41.5,25.5 38.5,19.5 C 34.5,13 25,16 22.5,23.5 L 22.5,27 L 22.5,23.5 C 19,16 9.5,13 6.5,19.5 C 3.5,25.5 11.5,29.5 11.5,29.5 L 11.5,37 z \"\r\n                style={{ fill: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 11.5,30 C 17,27 27,27 32.5,30\"\r\n                style={{ fill: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 11.5,33.5 C 17,30.5 27,30.5 32.5,33.5\"\r\n                style={{ fill: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 11.5,37 C 17,34 27,34 32.5,37\"\r\n                style={{ fill: color1, stroke: color2 }}\r\n            />\r\n        </g>\r\n    </svg>\r\n);","import React from 'react';\r\n\r\nexport default ({ color1, color2 }) => (\r\n    <svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" viewBox=\"0 0 45 45\">\r\n        <g\r\n            style={{\r\n                opacity: 1,\r\n                fill: color1,\r\n                fillOpacity: 1,\r\n                fillRule: 'evenodd',\r\n                stroke: color1,\r\n                strokeWidth: 1.5,\r\n                strokeLinecap: 'round',\r\n                strokeLinejoin: 'round',\r\n                strokeMiterlimit: 4,\r\n                strokeDasharray: 'none',\r\n                strokeOpacity: 1\r\n            }}\r\n        >\r\n            <g\r\n                style={{\r\n                    fill: color1,\r\n                    stroke: color1 === 'black' ? color1 : color2\r\n                }}\r\n            >\r\n                <circle cx=\"6\" cy=\"12\" r=\"2.75\" />\r\n                <circle cx=\"14\" cy=\"9\" r=\"2.75\" />\r\n                <circle cx=\"22.5\" cy=\"8\" r=\"2.75\" />\r\n                <circle cx=\"31\" cy=\"9\" r=\"2.75\" />\r\n                <circle cx=\"39\" cy=\"12\" r=\"2.75\" />\r\n            </g>\r\n            <path\r\n                d=\"M 9,26 C 17.5,24.5 30,24.5 36,26 L 38.5,13.5 L 31,25 L 30.7,10.9 L 25.5,24.5 L 22.5,10 L 19.5,24.5 L 14.3,10.9 L 14,25 L 6.5,13.5 L 9,26 z\"\r\n                style={{\r\n                    strokeLinecap: 'butt',\r\n                    stroke: color1 === 'black' ? color1 : color2\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 9,26 C 9,28 10.5,28 11.5,30 C 12.5,31.5 12.5,31 12,33.5 C 10.5,34.5 10.5,36 10.5,36 C 9,37.5 11,38.5 11,38.5 C 17.5,39.5 27.5,39.5 34,38.5 C 34,38.5 35.5,37.5 34,36 C 34,36 34.5,34.5 33,33.5 C 32.5,31 32.5,31.5 33.5,30 C 34.5,28 36,28 36,26 C 27.5,24.5 17.5,24.5 9,26 z\"\r\n                style={{\r\n                    strokeLinecap: 'butt',\r\n                    stroke:\r\n                        color1 === 'black'\r\n                            ? color1\r\n                            : color1 === 'black'\r\n                            ? color1\r\n                            : color2\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 11,38.5 A 35,35 1 0 0 34,38.5\"\r\n                style={{\r\n                    file: color1,\r\n                    stroke: color1,\r\n                    strokeLinecap: 'butt'\r\n                }}\r\n            />\r\n            <path\r\n                d=\"M 11,29 A 35,35 1 0 1 34,29\"\r\n                style={{ file: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 12.5,31.5 L 32.5,31.5\"\r\n                style={{ file: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 11.5,34.5 A 35,35 1 0 0 33.5,34.5\"\r\n                style={{ file: color1, stroke: color2 }}\r\n            />\r\n            <path\r\n                d=\"M 10.5,37.5 A 35,35 1 0 0 34.5,37.5\"\r\n                style={{\r\n                    file: color1,\r\n                    stroke: color2\r\n                }}\r\n            />\r\n        </g>\r\n    </svg>\r\n);","export default class Piece {\r\n    constructor({ id, type, x, y, player, firstMove }) {\r\n        this.id = id;\r\n        this.type = type;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.player = player;\r\n        this.firstMove = firstMove;\r\n    }\r\n}\r\n","export const ONE_SECOND = 1000;\r\n\r\nexport const BOARD_SIDE_SIZE = 7;\r\n\r\nexport const PLAYER1 = 0;\r\nexport const PLAYER2 = 1;\r\n\r\nexport const KING = 'king';\r\nexport const QUEEN = 'queen';\r\nexport const ROOK = 'rook';\r\nexport const KNIGHT = 'knight';\r\nexport const BISHOP = 'bishop';\r\nexport const PAWN = 'pawn';\r\n\r\nexport const KNIGHT_MOVE_DIMENSION1 = 2;\r\nexport const KNIGHT_MOVE_DIMENSION2 = 1;\r\n\r\nexport const LATERAL_BACK_ROW_PIECES = [ROOK, KNIGHT, BISHOP];\r\nexport const LEFT_BACK_ROW_PIECES = [...LATERAL_BACK_ROW_PIECES, QUEEN];\r\nexport const RIGHT_BACK_ROW_PIECES = [\r\n    KING,\r\n    ...LATERAL_BACK_ROW_PIECES.reverse()\r\n];","import uuid from 'uuid/v4';\r\nimport moment from 'moment';\r\nimport momentDurationFormatSetup from 'moment-duration-format';\r\n\r\nimport Piece from '../models/Piece';\r\nimport {\r\n    BOARD_SIDE_SIZE,\r\n    PLAYER1,\r\n    PLAYER2,\r\n    PAWN,\r\n    LEFT_BACK_ROW_PIECES,\r\n    RIGHT_BACK_ROW_PIECES,\r\n    KING,\r\n    QUEEN,\r\n    BISHOP,\r\n    ROOK,\r\n    KNIGHT,\r\n    KNIGHT_MOVE_DIMENSION1,\r\n    KNIGHT_MOVE_DIMENSION2\r\n} from '../lib/constants';\r\n\r\nmomentDurationFormatSetup(moment);\r\n\r\nexport default class GameState {\r\n    constructor() {\r\n        this.gameStartedAt = moment(); // timestamp\r\n        this.sessionStartedAt = moment(); // point of reference for time played in current session\r\n        this.totalTimePlayed = moment.duration(\r\n            moment().diff(moment()),\r\n            'milliseconds'\r\n        ); // keeps time spent across multiple sessions\r\n        this.currentPlayer = PLAYER1;\r\n        this.currentTurn = 0;\r\n        this.pieces = [];\r\n        this.removedPieces = [[], []];\r\n    }\r\n\r\n    updateTimePlayed = () => {\r\n        const sessionTimePlayed = moment.duration(\r\n            moment().diff(this.sessionStartedAt),\r\n            'milliseconds'\r\n        );\r\n        this.totalTimePlayed = sessionTimePlayed;\r\n    };\r\n\r\n    nextTurn = () => {\r\n        this.currentPlayer = +!this.currentPlayer;\r\n        this.currentTurn += 1;\r\n    };\r\n\r\n    initPieces = () => {\r\n        let pieces = [];\r\n        [PLAYER1, PLAYER2].forEach(player => {\r\n            [...LEFT_BACK_ROW_PIECES, ...RIGHT_BACK_ROW_PIECES].forEach(\r\n                (type, index) => {\r\n                    const piece = new Piece({\r\n                        id: uuid(),\r\n                        x: index,\r\n                        y: player ? 0 : BOARD_SIDE_SIZE,\r\n                        player,\r\n                        type,\r\n                        firstMove:\r\n                            type === ROOK || type === KING ? true : undefined\r\n                    });\r\n                    const pawn = new Piece({\r\n                        id: uuid(),\r\n                        x: index,\r\n                        y: player ? 1 : BOARD_SIDE_SIZE - 1,\r\n                        player,\r\n                        type: PAWN,\r\n                        firstMove: true\r\n                    });\r\n                    pieces.push(pawn);\r\n                    pieces.push(piece);\r\n                }\r\n            );\r\n        });\r\n\r\n        this.pieces = pieces;\r\n    };\r\n\r\n    getPieceAt = ({ x, y }) => {\r\n        return this.pieces.find(piece => {\r\n            let matchSelectedId = true;\r\n\r\n            if (this.selected && this.selected.piece) {\r\n                if (\r\n                    this.selected.x === piece.x &&\r\n                    this.selected.y === piece.y\r\n                ) {\r\n                    // make sure that, if pieces were to stack on the same square, only the selected piece would be returned\r\n                    if (this.selected.piece.id !== piece.id) {\r\n                        matchSelectedId = false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return piece.x === x && piece.y === y && matchSelectedId;\r\n        });\r\n    };\r\n\r\n    removePiece = pieceToRemove => {\r\n        const pieces = [];\r\n        this.pieces.forEach(piece => {\r\n            if (piece.id !== pieceToRemove.id) {\r\n                pieces.push(piece);\r\n            }\r\n        });\r\n\r\n        this.pieces = pieces;\r\n\r\n        const playerPieceRemoved = this.removedPieces[pieceToRemove.player];\r\n        const updatedPlayerPieceRemoved = [\r\n            ...playerPieceRemoved,\r\n            pieceToRemove\r\n        ];\r\n\r\n        const oppositePlayerPieceRemoved = this.removedPieces[\r\n            Number(!pieceToRemove.player)\r\n        ];\r\n\r\n        if (pieceToRemove.player === 0) {\r\n            this.removedPieces = [\r\n                updatedPlayerPieceRemoved,\r\n                oppositePlayerPieceRemoved\r\n            ];\r\n        } else {\r\n            this.removedPieces = [\r\n                oppositePlayerPieceRemoved,\r\n                updatedPlayerPieceRemoved\r\n            ];\r\n        }\r\n\r\n        console.log(this.removedPieces);\r\n    };\r\n\r\n    select = ({ x, y, piece }) => {\r\n        if (piece) {\r\n            const { x: discardX, y: discardY, ...pieceProperties } = piece;\r\n            this.selected = { x, y, piece: pieceProperties };\r\n        } else {\r\n            this.selected = { x, y };\r\n        }\r\n    };\r\n\r\n    unselect = () => {\r\n        this.selected = null;\r\n    };\r\n\r\n    isSelectedSquare = ({ x, y }) => {\r\n        if (!this.selected) {\r\n            return false;\r\n        }\r\n\r\n        return this.selected.x === x && this.selected.y === y;\r\n    };\r\n\r\n    isBishopPattern = ({ vectorX, vectorY }) => {\r\n        return Math.abs(vectorX) === Math.abs(vectorY);\r\n    };\r\n\r\n    isRookPattern = ({ vectorX, vectorY }) => {\r\n        return (\r\n            (vectorX === 0 && vectorY !== 0) || (vectorX !== 0 && vectorY === 0)\r\n        );\r\n    };\r\n\r\n    isRookMoveFree = ({ origin, vector }) => {\r\n        const axis = vector.x ? 'y' : 'x';\r\n        const otherAxis = vector.x ? 'x' : 'y';\r\n        const lineToCheck = origin[axis];\r\n        const target = origin[otherAxis] + vector[otherAxis];\r\n        const pieceIsInTheWay = this.pieces.some(piece => {\r\n            if (piece[axis] !== lineToCheck || piece.id === origin.id) {\r\n                return false;\r\n            }\r\n\r\n            if (vector[otherAxis] > 0) {\r\n                if (\r\n                    piece[otherAxis] > origin[otherAxis] &&\r\n                    piece[otherAxis] < target\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (vector[otherAxis] < 0) {\r\n                if (\r\n                    piece[otherAxis] < origin[otherAxis] &&\r\n                    piece[otherAxis] > target\r\n                ) {\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        });\r\n\r\n        return !pieceIsInTheWay;\r\n    };\r\n\r\n    isPiecePattern = ({\r\n        destination: { x, y },\r\n        origin,\r\n        type,\r\n        player,\r\n        firstMove\r\n    }) => {\r\n        const vectorX = x - origin.x;\r\n        const vectorY = y - origin.y;\r\n\r\n        switch (type) {\r\n            default: {\r\n                break;\r\n            }\r\n            case KING: {\r\n                return Math.abs(vectorX) === 1 || Math.abs(vectorY) === 1;\r\n                // TODO: check if this is castling\r\n                /*\r\n                    The king and the chosen rook are on the player's first rank.\r\n                    Neither the king nor the chosen rook has previously moved.\r\n                    There are no pieces between the king and the chosen rook.\r\n                    The king is not currently in check.\r\n                    The king does not pass through a square that is attacked by an enemy piece.\r\n                    The king does not end up in check. (True of any legal move.)\r\n                */\r\n            }\r\n            case QUEEN: {\r\n                return (\r\n                    this.isBishopPattern({ vectorX, vectorY }) ||\r\n                    this.isRookPattern({ vectorX, vectorY })\r\n                );\r\n            }\r\n            case ROOK: {\r\n                return (\r\n                    this.isRookPattern({ vectorX, vectorY }) &&\r\n                    this.isRookMoveFree({\r\n                        origin,\r\n                        vector: { x: vectorX, y: vectorY }\r\n                    })\r\n                );\r\n                // TODO: check if this is castling\r\n            }\r\n            case KNIGHT: {\r\n                if (\r\n                    (Math.abs(vectorX) === KNIGHT_MOVE_DIMENSION1 &&\r\n                        Math.abs(vectorY) === KNIGHT_MOVE_DIMENSION2) ||\r\n                    (Math.abs(vectorX) === KNIGHT_MOVE_DIMENSION2 &&\r\n                        Math.abs(vectorY) === KNIGHT_MOVE_DIMENSION1)\r\n                ) {\r\n                    return true;\r\n                }\r\n                break;\r\n            }\r\n            case BISHOP: {\r\n                return this.isBishopPattern({ vectorX, vectorY });\r\n            }\r\n            case PAWN: {\r\n                if (player === PLAYER2) {\r\n                    // TODO: check if pawn is taking a piece\r\n                    return (\r\n                        vectorY > 0 && vectorY <= 1 + firstMove && vectorX === 0\r\n                    );\r\n                }\r\n\r\n                if (player === PLAYER1) {\r\n                    // TODO: check if pawn is taking a piece\r\n                    return (\r\n                        vectorY < 0 &&\r\n                        vectorY >= -1 - firstMove &&\r\n                        vectorX === 0\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    isLegalMove = ({ destination, origin, type, player, firstMove }) => {\r\n        const fitsPiecePattern = this.isPiecePattern({\r\n            destination,\r\n            origin,\r\n            type,\r\n            player,\r\n            firstMove\r\n        });\r\n        return fitsPiecePattern;\r\n    };\r\n\r\n    moveSelectedPiece = ({ x, y }) => {\r\n        let moved = false;\r\n        let pieceToRemove = null;\r\n\r\n        if (!this.selected) {\r\n            return moved;\r\n        }\r\n\r\n        const {\r\n            x: selectedX,\r\n            y: selectedY,\r\n            piece: selectedPiece\r\n        } = this.selected;\r\n        if (selectedPiece) {\r\n            this.pieces = this.pieces.map(piece => {\r\n                if (\r\n                    piece.x === selectedX &&\r\n                    piece.y === selectedY &&\r\n                    piece.id === selectedPiece.id\r\n                ) {\r\n                    if (\r\n                        this.isLegalMove({\r\n                            origin: { x: piece.x, y: piece.y, id: piece.id },\r\n                            destination: { x, y },\r\n                            type: selectedPiece.type,\r\n                            player: selectedPiece.player,\r\n                            firstMove: selectedPiece.firstMove\r\n                        })\r\n                    ) {\r\n                        const targetPiece = this.getPieceAt({\r\n                            x,\r\n                            y\r\n                        });\r\n\r\n                        if (targetPiece) {\r\n                            if (\r\n                                selectedPiece.player === this.currentPlayer &&\r\n                                targetPiece.player !== selectedPiece.player\r\n                            ) {\r\n                                pieceToRemove = targetPiece;\r\n                            } else {\r\n                                return piece;\r\n                            }\r\n                        } else if (\r\n                            selectedPiece.player !== this.currentPlayer\r\n                        ) {\r\n                            return piece;\r\n                        }\r\n\r\n                        moved = true;\r\n\r\n                        this.select({\r\n                            x,\r\n                            y,\r\n                            piece: { ...piece, firstMove: false }\r\n                        });\r\n\r\n                        this.nextTurn();\r\n                        return new Piece({ ...piece, x, y, firstMove: false });\r\n                    } else {\r\n                        // select empty tile\r\n                        this.select({ x, y });\r\n                        return piece;\r\n                    }\r\n                }\r\n\r\n                return piece;\r\n            });\r\n\r\n            if (pieceToRemove) {\r\n                this.removePiece(pieceToRemove);\r\n            }\r\n        } else {\r\n            this.select({ x, y });\r\n        }\r\n\r\n        return moved;\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport icons from './icons';\r\nimport GameState from '../models/GameState';\r\nimport { BOARD_SIDE_SIZE, ONE_SECOND } from '../lib/constants';\r\n\r\nexport default class Home extends Component {\r\n    constructor() {\r\n        super();\r\n        const gameState = new GameState();\r\n        gameState.initPieces();\r\n        this.state = { gameState };\r\n        window.gameState = gameState;\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n            const { gameState } = this.state;\r\n            gameState.updateTimePlayed();\r\n            this.updateGameState(gameState);\r\n        }, ONE_SECOND);\r\n    }\r\n\r\n    updateGameState = gameState => this.setState({ gameState });\r\n\r\n    handleSelect = ({ x, y, piece }) => {\r\n        const { gameState } = this.state;\r\n        const { selected } = gameState;\r\n        if (selected) {\r\n            if (selected.x === x && selected.y === y) {\r\n                gameState.unselect();\r\n            } else if (selected.piece) {\r\n                const moved = gameState.moveSelectedPiece({ x, y });\r\n\r\n                if (!moved) {\r\n                    gameState.select({ x, y, piece });\r\n                }\r\n            } else {\r\n                gameState.select({ x, y, piece });\r\n            }\r\n        } else {\r\n            gameState.select({ x, y, piece });\r\n        }\r\n\r\n        this.updateGameState(gameState);\r\n    };\r\n\r\n    renderPieceIcon = ({ id, type, player }) => {\r\n        if (!type) {\r\n            return null;\r\n        }\r\n\r\n        const Icon = icons[type];\r\n\r\n        if (Icon) {\r\n            return (\r\n                <IconContainer title={type}>\r\n                    <Icon\r\n                        color1={player ? 'black' : 'white'}\r\n                        color2={player ? 'white' : 'black'}\r\n                    />\r\n                </IconContainer>\r\n            );\r\n        }\r\n\r\n        return type;\r\n    };\r\n\r\n    renderGameStats = () => {\r\n        const { gameState } = this.state;\r\n        return (\r\n            <GameStats>\r\n                <CurrentTurn>#{String(gameState.currentTurn + 1)}:</CurrentTurn>\r\n                <CurrentPlayer player={gameState.currentPlayer}>\r\n                    {gameState.currentPlayer ? 'Black' : 'White'}\r\n                </CurrentPlayer>\r\n                <TimePlayed>\r\n                    {gameState.totalTimePlayed.format('hh:mm:ss', {\r\n                        trim: false\r\n                    })}\r\n                </TimePlayed>\r\n            </GameStats>\r\n        );\r\n    };\r\n\r\n    renderGraveyard = player => {\r\n        const { gameState } = this.state;\r\n        return gameState.removedPieces[player].map(piece => (\r\n            <Tomb key={piece.id}>{this.renderPieceIcon(piece)}</Tomb>\r\n        ));\r\n    };\r\n\r\n    renderSquares = () => {\r\n        const { gameState } = this.state;\r\n        let squares = [];\r\n        for (let y = 0; y <= BOARD_SIDE_SIZE + 2; y++) {\r\n            for (let x = 0; x <= BOARD_SIDE_SIZE + 2; x++) {\r\n                if (x === 0 && y === 0) {\r\n                    squares.push(<Side key={`${x}-${y}`} />);\r\n                } else if (x === 9) {\r\n                    squares.push(\r\n                        <Side\r\n                            key={`${x}-${y}`}\r\n                            border={y > 0 && y < 9 && 'left'}\r\n                        />\r\n                    );\r\n                } else if (y === 9) {\r\n                    squares.push(\r\n                        <Side key={`${x}-${y}`} border={x > 0 && 'top'} />\r\n                    );\r\n                } else if (x === 0) {\r\n                    squares.push(\r\n                        <Side key={`${x}-${y}`} border=\"right\">\r\n                            {y}\r\n                        </Side>\r\n                    );\r\n                } else if (y === 0) {\r\n                    squares.push(\r\n                        <Side key={`${x}-${y}`} border=\"bottom\">\r\n                            {String.fromCharCode(96 + x)}\r\n                        </Side>\r\n                    );\r\n                } else {\r\n                    const adjustedX = x - 1;\r\n                    const adjustedY = y - 1;\r\n                    const piece = gameState.getPieceAt({\r\n                        x: adjustedX,\r\n                        y: adjustedY\r\n                    });\r\n                    squares.push(\r\n                        <Square\r\n                            key={`${x}-${y}`}\r\n                            even={(x + y) % 2 === 0}\r\n                            player={piece && piece.player}\r\n                            onClick={() =>\r\n                                this.handleSelect({\r\n                                    x: adjustedX,\r\n                                    y: adjustedY,\r\n                                    piece\r\n                                })\r\n                            }\r\n                            selected={gameState.isSelectedSquare({\r\n                                x: adjustedX,\r\n                                y: adjustedY\r\n                            })}\r\n                        >\r\n                            {this.renderPieceIcon({ ...piece })}\r\n                        </Square>\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        return squares;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <View>\r\n                {this.renderGameStats()}\r\n                <Wrapper>\r\n                    <Graveyard>{this.renderGraveyard(0)}</Graveyard>\r\n                    <Board>{this.renderSquares()}</Board>\r\n                    <Graveyard>{this.renderGraveyard(1)}</Graveyard>\r\n                </Wrapper>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst View = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    min-height: 100vh;\r\n    user-select: none;\r\n    color: ${props => props.theme.color1};\r\n`;\r\n\r\nconst GameStats = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n    flex-wrap: wrap;\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    background: ${props => props.theme.background2};\r\n    color: ${props => props.theme.color2};\r\n    min-height: 40px;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nconst CurrentTurn = styled.div`\r\n    margin-right: 2px;\r\n`;\r\n\r\nconst CurrentPlayer = styled.div`\r\n    text-transform: uppercase;\r\n    font-weight: bold;\r\n    color: ${props => (props.player ? 'black' : 'white')};\r\n    width: 60px;\r\n    margin-right: 20px;\r\n`;\r\n\r\nconst TimePlayed = styled.div``;\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n`;\r\n\r\nconst Graveyard = styled.div`\r\n    width: 95%;\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    height: 5vw;\r\n    @media screen and (orientation: landscape) {\r\n        height: 5vh;\r\n    }\r\n`;\r\n\r\nconst Tomb = styled.div`\r\n    width: 5vw;\r\n    @media screen and (orientation: landscape) {\r\n        width: 5vh;\r\n    }\r\n`;\r\n\r\nconst Board = styled.div`\r\n    display: grid;\r\n    grid-template: repeat(10, calc(85vw / 10)) / repeat(10, calc(85vw / 10));\r\n    @media screen and (orientation: landscape) {\r\n        grid-template: repeat(10, calc((85vh - 50px) / 10)) / repeat(\r\n                10,\r\n                calc(85vh / 10)\r\n            );\r\n    }\r\n`;\r\n\r\nconst Square = styled.div`\r\n    background: ${props =>\r\n        props.selected\r\n            ? 'green'\r\n            : props.even\r\n            ? props.theme.evenSquareBackground\r\n            : props.theme.oddSquareBackground};\r\n    color: ${props => (props.player ? 'black' : 'white')};\r\n    text-shadow: 0 0 2px ${props => (props.player ? 'white' : 'black')};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    overflow: hidden;\r\n`;\r\n\r\nconst Side = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    ${props =>\r\n        props.border ? `border-${props.border}: 1px solid black;` : null}\r\n    font-size: 14px;\r\n`;\r\n\r\nconst IconContainer = styled.div`\r\n    svg {\r\n        width: 100%;\r\n        height: 100%;\r\n    }\r\n`;","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Switch } from 'react-router';\nimport { HashRouter, Route } from 'react-router-dom';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport darkTheme from './themes/dark';\nimport lightTheme from './themes/light';\n\nimport GameView from './components/GameView';\n\nconst GlobalStyle = createGlobalStyle`\n    body {\n        margin: 0;\n        background: ${props => props.theme.background1};\n    }\n`;\n\nReactDOM.render(\n    <ThemeProvider theme={darkTheme}>\n        <div>\n            <GlobalStyle />\n            <HashRouter>\n                <Switch>\n                    <Route path=\"/\" component={GameView} />\n                </Switch>\n            </HashRouter>\n        </div>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\n","export default {\r\n    name: 'dark',\r\n    evenSquareBackground: 'rgb(210, 210, 210)',\r\n    oddSquareBackground: 'rgb(150, 150, 150)',\r\n    background1: 'rgb(40, 40, 40)',\r\n    background2: 'rgb(118, 118, 118)',\r\n    color1: 'rgb(210, 210, 210)',\r\n    color2: 'rgb(250, 250, 250)'\r\n};"],"sourceRoot":""}